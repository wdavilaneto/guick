#set( $js  = "$")
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
#set( $bigFieldSize = 100)
#set( $isFilter = false )
#set( $idAgragation = '' )
#set( $rowSize = 0)

####### TODO Teste TEMPORARIO REMOVER!!!
#if(  ${entity.childrens.size()} > 0 && ${entity.childrens[0].name} == 'FuncImg' )
            <!--
            <mat-card-header>
                <div mat-card-avatar>
                    <img ng-src="data:image/*;base64,{{vm.entity.foto}}" ng-show="vm.entity.foto" width="80px" />
                </div>
                <mat-card-title>title</mat-card-title>
                <mat-card-subtitle>asfd</mat-card-subtitle>
            </mat-card-header>
            -->
#end

#if(${entity.id.type} != 'Long' && !(${entity.table.pk.size()} == 1 && ${entity.table.pk[0].useUUID}) && !(${entity.table.getFieldThatPointsParentPk().size()} == 1))
#set( $property = ${entity.id} )
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
##########  HERE wh stasrt
#foreach( ${property} in ${entity.properties})
#if(${property.column.length} >= ${bigFieldSize})
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
#end
#########
#foreach( ${property} in ${entity.parent.getProperties()})
#if(${property.column.length} >= ${bigFieldSize})
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
#end
#########
#foreach( ${property} in ${entity.id.getProperties()})
#set( $idAgragation = 'id.' )
#if(${property.column.length} >= ${bigFieldSize})
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
#end
##################################################
####################### Complex properties
##################################################
#set ($stringField = "id")
#foreach( ${complexProperty} in ${entity.getManyToOneProperties()})
#set( $beanName = ${util.uncapitalize($complexProperty.name)} )
#if(${complexProperty.referedEntity.table.count} > 200 || ${complexProperty.referedEntity.looksLikeMainEntity()} )
################ logic for description name
#if (${complexProperty.referedEntity.looksLikeDomain()} && ${complexProperty.referedEntity.getManyToOneProperties().size()} >=1 )
#set( $toOneProperty = ${complexProperty.referedEntity.getManyToOneProperties()[0]} )
### find first StringField
#set ( $stringField = 'id' )
#foreach( ${prop} in ${toOneProperty.referedEntity.properties})
#if(${prop.type} == 'String' && $stringField == 'id' )
#set ($stringField = ${prop})
#end
#end
#end
        <div fxFlex="50" fxFlex.lt-md="100">
##            <mat-form-field>
                <!--<mat-label>${complexProperty.name}</mat-label>-->
                <ng-select [items]="${beanName}List$ | async" bindLabel="${stringField}" bindValue="id" formControlName="${idAgragation}${complexProperty.name}Select"
                           placeholder="select ${complexProperty.name}">
                </ng-select>
##            </mat-form-field>
        </div>
#else
        <div fxFlex="50" fxFlex.lt-md="100">
##            <mat-form-field>
                <!--<mat-label>${complexProperty.name}</mat-label>-->
                <ng-select [items]="${beanName}List$" bindLabel="${stringField}" bindValue="id" formControlName="${idAgragation}${complexProperty.name}Select"
                           placeholder="select ${complexProperty.name}">
                </ng-select>
##            </mat-form-field>
        </div>
##if( ${complexProperty.referedEntity.looksLikeMainEntity()} )
##            <a class="btn-detail" (click)="onSelect${complexProperty.referedEntity.name}(${complexProperty.referedEntity.beanName}.id)"><i class="fa fa-fw fa-search-plus"></i></a>
##end

#end
#end
##################################################
#foreach( ${complexProperty} in ${entity.parent.getManyToOneProperties()})
#set( $beanName = ${util.uncapitalize($complexProperty.name)} )
#if(${complexProperty.referedEntity.table.count} > 200 || ${complexProperty.referedEntity.looksLikeMainEntity()})

################ logic for description name
#if (${complexProperty.referedEntity.looksLikeDomain()} && ${complexProperty.referedEntity.getManyToOneProperties().size()} >=1 )
#set( $toOneProperty = ${complexProperty.referedEntity.getManyToOneProperties()[0]} )
### find first StringField
#set ( $stringField = 'id' )
#foreach( ${prop} in ${toOneProperty.referedEntity.properties})
#if(${prop.type} == 'String' && $stringField == 'id' )
#set ($stringField = ${prop})
#end
#end
#end
        <div fxFlex="50" fxFlex.lt-md="100">
##            <mat-form-field>
                <!--<mat-label>${complexProperty.name}</mat-label>-->
                <ng-select [items]="${beanName}List$ | async" bindLabel="${prop.beanNAme}.${stringField}" bindValue="id" formControlName="${idAgragation}${complexProperty.name}Select"
                       placeholder="select ${complexProperty.name}">
                </ng-select>
##            </mat-form-field>
        </div>
#else
        <div fxFlex="50" fxFlex.lt-md="100">
##            <mat-form-field>
                <!--<mat-label>${complexProperty.name}</mat-label>-->
                <ng-select [items]="${beanName}List" bindLabel="name" bindValue="id" formControlName="${idAgragation}${complexProperty.name}Select"
                           placeholder="select ${complexProperty.name}">
                </ng-select>
##if( ${complexProperty.referedEntity.looksLikeMainEntity()} )
##              <a class="btn-detail" (click)="onSelect${complexProperty.referedEntity.name}(${complexProperty.referedEntity.beanName}.id)"><i class="fa fa-fw fa-search-plus"></i></a>
##end
##            </mat-form-field>
        </div>

#end
#end
##################################################
#set( $idAgragation = '' )
#foreach( ${property} in ${entity.properties})
#if(${property.column.length} < ${bigFieldSize})
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
#end
#########
#foreach( ${property} in ${entity.parent.getProperties()})
#if(${property.column.length} < ${bigFieldSize})
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
#end
#########
#foreach( ${property} in ${entity.id.getProperties()})
#set( $idAgragation = 'id.' )
#if(${property.column.length} < ${bigFieldSize})
#parse( "angular/domain/entity/entity.property.inc.vm" )
#end
#end




#######################################
################# now text areas
#######################################
#foreach( ${property} in ${entity.properties})
#if(${property.column.type} == 'CLOB' || ${property.column.type} == 'text' || ${property.column.length} >= 1000)
          <div fxFlex="100" fxFlex.lt-md="100">
            <mat-form-field>
                <textarea matInput placeholder="${property}" formControlName="${idAgragation}${property}" rows="3"></textarea>
            </mat-form-field>
          </div>
#end
#end
#######################################
#foreach( ${property} in ${entity.parent.getProperties()})
#if(${property.column.type} == 'CLOB' || ${property.column.type} == 'text' || ${property.column.length} >= 1000 )
          <div fxFlex="100" fxFlex.lt-md="100">
            <mat-form-field>
                <textarea matInput placeholder="${property}" formControlName="${idAgragation}${property}" rows="3"></textarea>
            </mat-form-field>
          </div>
#end
#end
#######################################
#foreach( ${property} in ${entity.id.getProperties()})
#set( $idAgragation = 'id.' )
#if(${property.column.type} == 'CLOB' || ${property.column.type} == 'text' || ${property.column.length} >= 1000)
          <div fxFlex="100" fxFlex.lt-md="100">
            <mat-form-field>
                <textarea matInput placeholder="${property}" formControlName="${idAgragation}${property}" rows="3"></textarea>
            </mat-form-field>
          </div>
#end
#end

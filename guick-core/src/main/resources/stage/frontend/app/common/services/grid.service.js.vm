#set( $js  = "$")
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
(function() {
    'use strict';

    angular.module('${project.name}App.main').factory('pagingService', ['$resource',
        function ($resource) {
            var service = {};
            var _pageSizes= [10, 20, 50]
            var _pageSize= 10;

            // Create new instance of pagination
            service.createPagination= function(){
                var pagination = {
                    pageSizes: _pageSizes,
                    pageSize: _pageSize,
                    currentPage: 1,
                    totalElements: 0,
                    selected:[],
                    result:{}
                };
                pagination.getPageRequest = function (){
                    return {page: this.currentPage , size: this.pageSize}
                };
                return pagination;
            };
            return service;
        }
    ]);

    angular.module('${project.name}App.main').factory('gridService', ['$resource', 'pagingService',

        function ($resource, pagingService) {

            var service = {};

            // Create an new Grid Options
            service.createGridOptions = function (isEditMode) {
                var pagination = pagingService.createPagination();
                var baseOptions = {
                    data: 'resultPage.content',
                    // enableCellSelection: false,
                    enableRowSelection: false,
                    useExternalPagination: true,
                    //   multiSelect: false,
                    //   selectWithCheckboxOnly: false,
                    //   showSelectionCheckbox: false,
                    enableRowHeaderSelection: false,
                    enableFiltering: true,
                    enableSorting: true,
                    enableColumnResizing: true,
                    enableColumnMenus: false,
                    enablePagination: true,
                    enablePaginationControls: true,
                    showGridFooter: true,
                    showHeader: true,
                    totalServerItems: 'resultPage.totalElements',
                    totalItems: 'resultPage.totalElements'
                };

                // get pagination from pagination factory
                baseOptions.getPagination = function (){
                    // Delegate to pagination
                    return pagination;
                };
                // Delegation method to get Request Page Parameter(from pagination) to send to backend api
                baseOptions.getPageRequest = function (){
                    // Delegate to pagination
                    return pagination.getPageRequest();
                };

                if (!isEditMode) {
                    isEditMode = false;
                }
                var options = baseOptions;
                options.selectedItems = pagination.selected;
                options.pagingOptions = pagination;
                options.paginationPageSizes = pagination.pageSizes;
                options.paginationPageSize = pagination.pageSize;
                return options;
            };

            return service;
        }
    ]);

})();
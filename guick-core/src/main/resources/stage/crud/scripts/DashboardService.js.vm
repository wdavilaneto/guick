#set( $js  = "$")
#set( $open  = "${")
#set( $close = "}")
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
'use strict';

/**
 * @ngdoc service
 * @name ${projectBeanName}App.${projectBeanName}Service
 * @description
 * # myService
 * Factory in the ${projectBeanName}App.
 */

var ${projectBeanName}Services = angular.module('${projectBeanName}App');

${projectBeanName}Services.factory('dashboardService', ['$resource',
    function ($resource) {
        var basicOptions = {
            chart: {
                type: 'discreteBarChart',
                title: {
                    enable: true,
                    text: "Graficos cfrequencia"
                },
                height: 400,
                margin : {
                    top: 20,
                    right: 20,
                    bottom: 65,
                    left: 80
                },
                x: function(d){return d.label;},
                y: function(d){return parseInt(d.value);},
                showValues: true,
                transitionDuration: 500,
                xAxis: {
                    rotateLabels: -25
                },
                yAxis: {
                    axisLabelDistance: 10
                }
            }
        };

        var service = $resource('/${projectBeanName}/api/reports/dashboard/', {}, {
#set( $mainEntities = ${project.getAllMainEntities()} )
#foreach( ${entity} in ${mainEntities} )
#foreach( ${e} in ${entity.getOneToManyProperties()} )
#set($collectionProperty = $util.capitalize( ${e.mappedBy} ) )
#set($capitalizedName = $util.capitalize( ${e.name} ) )
#set($numericProperties = ${e.referedEntity.getAllNumericProperties()} )
#if( !${e.referedEntity.looksLikeEnum()} && ${numericProperties.size()} > 0 && !${entity.getId().isEmbeddable()} && !${e.referedEntity.id.isEmbeddable()})
#set($collectionProperty = $util.capitalize( ${e.mappedBy} ) )
#set($capitalizedName = $util.capitalize( ${e.name} ) )
#set($capitalizedProp = $util.capitalize( ${numericProperties[0].name} ) )
            'get${capitalizedName}WithSum${collectionProperty}${capitalizedProp}': { method: 'GET', url: '/${projectBeanName}/api/reports/dashboard/get${capitalizedName}WithSum${collectionProperty}${capitalizedProp}', isArray: true},
#end
#if( !${e.referedEntity.looksLikeEnum()} && ${numericProperties.size()} > 1 && !${entity.getId().isEmbeddable()} && !${e.referedEntity.id.isEmbeddable()})
#set($capitalizedProp = $util.uncapitalize( ${numericProperties[1].name} ) )
            'get${capitalizedName}WithSum${collectionProperty}${capitalizedProp}': { method: 'GET', url: '/${projectBeanName}/api/reports/dashboard/get${capitalizedName}WithSum${collectionProperty}${capitalizedProp}', isArray: true},
#end
#if( !${e.referedEntity.looksLikeEnum()} && ${numericProperties.size()} > 2 && !${entity.getId().isEmbeddable()} && !${e.referedEntity.id.isEmbeddable()})
#set($capitalizedProp = $util.uncapitalize( ${numericProperties[2].name} ) )
            'get${capitalizedName}WithSum${collectionProperty}${capitalizedProp}': { method: 'GET', url: '/${projectBeanName}/api/reports/dashboard/get${capitalizedName}WithSum${collectionProperty}${capitalizedProp}', isArray: true},
#end
#end
#end
            'allCount': { method: 'GET', url: '/${projectBeanName}/api/reports/dashboard/allCount', isArray: true}

        });

        service.getBasicOptions = function (){
            return basicOptions;
        };

        return service;
    }
]);

#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
/**
 *  Guick Generate class: https://github.com/wdavilaneto/guick
 *  Author: service-wdavilaneto@redhat.com
 *  This source is free under The Apache Software License, Version 2.0
 *  license url http://www.apache.org/licenses/LICENSE-2.0.txt
 */
package ${project.group}.${project.name}.api.persistence.core;

import java.math.BigDecimal;
import java.util.Date;

import ${project.group}.${project.name}.domain.${entity.name};
#if(!$entity.isEmbeddable() and !$entity.getParent() && ${entity.id.type} != 'Long' && ${entity.id.type} != 'String' && ${entity.id.type} != 'Date' && ${entity.id.type} != 'BigDecimal')
import ${project.group}.${project.name}.domain.${entity.id.type};
#end
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

public interface ${entity.name}RepositoryCustom {

    /**
     * Returns an full, but Paged, list of all entities (${entity.name})
     * @param pageable
     * @return
     */
    public Page<${entity.name}> findAll(Pageable pageable);

    Page<${entity.name}> search(${entity.name} entity, Pageable pageable);

    Page<${entity.name}> searchText(String text, Pageable pageable);

##if(!$entity.isEmbeddable() and !$entity.getParent() )
    ${entity.name} get(${entity.id.type} id);
##else
##    ${entity.name} get(${entity.name} e);
##end
##if( $entity.childrens.size() > 0 )

    public ${entity.name} update(${entity.name} ${entityBeanName});

    public ${entity.name} create(${entity.name} ${entityBeanName});
##end

#if (${entity.hasDeadline()})
    public Page<${entity.name}> overdue(Pageable pageable);
#end
}
